{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","upload","selector","options","input","document","querySelector","preview","createElement","classList","add","btnOpen","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","files","length","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","e","src","result","insertAdjacentHTML","name","size","readAsDataURL","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n   const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n\r\n   if (!bytes) {\r\n      return '0 Byte';\r\n   }\r\n\r\n   const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n\r\n   return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function upload(selector, options = {}) {\r\n   const input = document.querySelector(selector);\r\n   const preview = document.createElement('div');\r\n\r\n   preview.classList.add('preview');\r\n\r\n   const btnOpen = document.createElement('button');\r\n   btnOpen.classList.add('btn');\r\n   btnOpen.textContent = 'Open';\r\n\r\n   if (options.multi) {\r\n      input.setAttribute('multiple', true);\r\n   }\r\n\r\n   if (options.accept && Array.isArray(options.accept)) {\r\n      input.setAttribute('accept', options.accept.join(','));\r\n   }\r\n\r\n   input.insertAdjacentElement('afterend', btnOpen);\r\n   input.insertAdjacentElement('afterend', preview);\r\n\r\n   const triggerInput = () => input.click();\r\n   const changeHandler = event => {\r\n      if (!event.target.files.length) {\r\n         return;\r\n      }\r\n\r\n      const files = Array.from(event.target.files);\r\n\r\n      preview.innerHTML = '';\r\n\r\n      files.forEach(file => {\r\n         if (!file.type.match('image')) {\r\n            return;\r\n         }\r\n\r\n         const reader = new FileReader();\r\n\r\n         reader.onload = e => {\r\n            const src = e.target.result;\r\n\r\n            preview.insertAdjacentHTML('afterbegin', `\r\n               <div class=\"preview-img\">\r\n                  <div class=\"preview-remove\">&times;</div>\r\n                  <img src=\"${src}\" alt=\"${file.name}\" />\r\n                  <div class=\"preview-info\">\r\n                     <span>${file.name}</span>\r\n                     <span>${bytesToSize(file.size)}</span>\r\n                  </div>\r\n               </div>\r\n            `);\r\n         };\r\n\r\n         reader.readAsDataURL(file);\r\n      });\r\n   };\r\n\r\n   btnOpen.addEventListener('click', triggerInput);\r\n   input.addEventListener('change', changeHandler);\r\n}","import {upload} from './upload';\r\n\r\nupload('#file', {\r\n   multi: true,\r\n   accept: ['.png', '.jpeg', 'jpg', '.svg', '.gi']\r\n});"]}